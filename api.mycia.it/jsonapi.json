{
    "openapi": "3.0.3",
    "info": {
        "title": "api.mycia.it",
        "description": "This page contains the documentation on how to use MyCia through shared API calls.\n\n > Note: this spec is based on [jsonapi format v1.1](https://jsonapi.org/format/1.1/) and each request, response and structure SHALL conform to the standard.\n\n## Request Content-Type\n\nThe Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded` or `multipart/form-data`;\n\nAdd an `Accept: application/json` header to the request to get the JSON response.\nSending requests with the `Accept` header is necessary if you want to use URLs\nfor related endpoints returned by the API, such as pagination URLs.\n\n## Authentication\n\nSome endpoints do not require any authentication, pretty much anything else will require you to be authenticated.\n\nTo become authenticated you will need to ask for your API Account.\n\nOnce you have your client API account you can pass it in along with your API id as an HTTP header like this:\n\n```\ncurl -X GET \"http://127.0.0.1:3000/v1/module/action\" \\\n-H \"Accept: application/json;\" \\\n-H \"client_id: your_client_id\" \\\n-H \"client_secret: your_client_secret\"\n```\n\nand this is how POST requests will look:\n\n```\ncurl -X POST \"http://127.0.0.1:3000/v1/module/action\" \\\n-H \"Content-Type: application/x-www-form-urlencoded;\" \\\n-H \"Accept: application/json;\" \\\n-H \"client_id: your_client_id\" \\\n-H \"client_secret: your_client_secret\" \\\n-F \"field1=data\" \\\n-F \"field2=data\" \\\n-F \"field3=data\"\n```",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://api-staging.mycia.it",
            "description": "Staging url"
        },
        {
            "url": "https://api.mycia.it",
            "description": "Base url"
        }
    ],
    "paths": {
        "/v1/addresses": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Get all addresses",
                "operationId": "getAddresses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Address"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "Store an address",
                "operationId": "storeAddress",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/AddressRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AddressResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/bookings": {
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get all bookings",
                "operationId": "getBookings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Booking"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Booking"
                ],
                "summary": "Store a booking",
                "operationId": "storeBooking",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/BookingRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BookingResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/bookings/availability": {
            "parameters": [
                {
                    "name": "token",
                    "description": "The business token",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "date",
                    "description": "The booking date",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "time",
                    "description": "The booking time",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "seats",
                    "description": "The number of guests",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "get": {
                "tags": [
                    "Booking"
                ],
                "summary": "Get booking availability",
                "operationId": "getBookingAvailability",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BookingSlot"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/businesses": {
            "get": {
                "tags": [
                    "Business"
                ],
                "summary": "Get all businesses",
                "operationId": "getBusinesses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Business"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Store a business",
                "operationId": "storeBusiness",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/BusinessRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BusinessResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/businesses/{business}/bindLine": {
            "parameters": [
                {
                    "name": "business",
                    "description": "The business id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Bind a line to a business",
                "operationId": "bindBusinessLine",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/BusinessLineRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/businesses/{business}/bindNetwork": {
            "parameters": [
                {
                    "name": "business",
                    "description": "The business id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Bind a network to a business",
                "operationId": "bindBusinessNetwork",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/BusinessNetworkRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/businesses/{business}/bindType": {
            "parameters": [
                {
                    "name": "business",
                    "description": "The business id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "post": {
                "tags": [
                    "Business"
                ],
                "summary": "Bind a type to a business",
                "operationId": "bindBusinessType",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/BusinessTypeRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/companies": {
            "get": {
                "tags": [
                    "Company"
                ],
                "summary": "Get all companies",
                "operationId": "getCompanies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Company"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Company"
                ],
                "summary": "Store a company",
                "operationId": "storeCompany",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/CompanyRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CompanyResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/guests": {
            "get": {
                "tags": [
                    "Guest"
                ],
                "summary": "Get all guests",
                "operationId": "getGuests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Guest"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Guest"
                ],
                "summary": "Store a guest",
                "operationId": "storeGuest",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/GuestRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/GuestResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lines": {
            "get": {
                "tags": [
                    "Line"
                ],
                "summary": "Get all lines",
                "operationId": "getLines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Line"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Line"
                ],
                "summary": "Store a line",
                "operationId": "storeLine",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/LineRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LineResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/lines/{line}/bindBusiness": {
            "parameters": [
                {
                    "name": "line",
                    "description": "The line id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "post": {
                "tags": [
                    "Line"
                ],
                "summary": "Bind a business to a line",
                "operationId": "bindLineBusiness",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/LineBusinessRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/locations": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get all locations",
                "operationId": "getLocations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Location"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/networks": {
            "get": {
                "tags": [
                    "Network"
                ],
                "summary": "Get all networks",
                "operationId": "getNetworks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Network"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Store a network",
                "operationId": "storeNetwork",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/NetworkRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/NetworkResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/networks/{network}/bindBusiness": {
            "parameters": [
                {
                    "name": "network",
                    "description": "The network id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "post": {
                "tags": [
                    "Network"
                ],
                "summary": "Bind a network to a business",
                "operationId": "bindNetworkBusiness",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/NetworkBusinessRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/types": {
            "get": {
                "tags": [
                    "Type"
                ],
                "summary": "Get all types",
                "operationId": "getTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Type"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Type"
                ],
                "summary": "Store a type",
                "operationId": "storeType",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/TypeRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TypeResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/types/{type}/bindBusiness": {
            "parameters": [
                {
                    "name": "type",
                    "description": "The type id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "post": {
                "tags": [
                    "Type"
                ],
                "summary": "Bind a business to a type",
                "operationId": "bindTypeBusiness",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/TypeBusinessRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store a user",
                "operationId": "storeUser",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/UserRequest"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserResponse"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "address"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "address_line1": {
                                "type": "string",
                                "example": "Via Roma, 1"
                            },
                            "locality": {
                                "type": "string",
                                "example": "Milano"
                            },
                            "latitude": {
                                "type": "number",
                                "example": "45.58534"
                            },
                            "longitude": {
                                "type": "number",
                                "example": "11.39318"
                            },
                            "livemode": {
                                "type": "boolean",
                                "example": true
                            },
                            "address_line2": {
                                "type": "string",
                                "nullable": true,
                                "example": "Interno 4"
                            }
                        },
                        "required": [
                            "address_line1",
                            "locality",
                            "latitude",
                            "longitude",
                            "livemode"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "AddressRequest": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "example": "Via Roma, 1, Milano"
                    }
                },
                "required": [
                    "address"
                ]
            },
            "AddressResponse": {
                "type": "object",
                "properties": {
                    "address_line1": {
                        "type": "string",
                        "example": "Via Roma, 1"
                    },
                    "locality": {
                        "type": "string",
                        "example": "Milano"
                    },
                    "latitude": {
                        "type": "number",
                        "example": "45.58534"
                    },
                    "longitude": {
                        "type": "number",
                        "example": "11.39318"
                    },
                    "livemode": {
                        "type": "boolean",
                        "example": true
                    },
                    "address_line2": {
                        "type": "string",
                        "nullable": true,
                        "example": "Interno 4"
                    }
                }
            },
            "Booking": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "booking"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "reserved_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2023-01-01 12:00:00"
                            },
                            "seats": {
                                "type": "integer",
                                "example": 2
                            },
                            "status": {
                                "type": "string",
                                "example": "accepted"
                            },
                            "livemode": {
                                "type": "boolean",
                                "example": true
                            },
                            "note": {
                                "type": "string",
                                "nullable": true,
                                "example": "Lorem ipsum dolor.."
                            }
                        },
                        "required": [
                            "reserved_at",
                            "seats",
                            "status",
                            "livemode"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "BookingSlot": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string",
                        "example": "20:00"
                    },
                    "end": {
                        "type": "string",
                        "example": "20:15"
                    },
                    "reserved": {
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "BookingRequest": {
                "type": "object",
                "properties": {
                    "reserved_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "seats": {
                        "type": "integer",
                        "example": 2
                    },
                    "note": {
                        "type": "string",
                        "nullable": true,
                        "example": "Lorem ipsum dolor.."
                    }
                },
                "required": [
                    "reserved_at",
                    "seats"
                ]
            },
            "BookingResponse": {
                "type": "object",
                "properties": {
                    "reserved_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 12:00:00"
                    },
                    "seats": {
                        "type": "integer",
                        "example": 2
                    },
                    "status": {
                        "type": "string",
                        "example": "accepted"
                    },
                    "note": {
                        "type": "string",
                        "nullable": true,
                        "example": "Lorem ipsum dolor.."
                    }
                }
            },
            "Business": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "business"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "token": {
                                "type": "string",
                                "example": "a1b2c3d4e"
                            },
                            "name": {
                                "type": "string",
                                "example": "Il Tiglio"
                            },
                            "email": {
                                "type": "string",
                                "example": "iltiglio@email.it"
                            },
                            "phone": {
                                "type": "string",
                                "example": "+393411234124"
                            },
                            "livemode": {
                                "type": "boolean",
                                "example": true
                            },
                            "is_visible": {
                                "type": "boolean",
                                "example": true
                            },
                            "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "Lorem ipsum dolor est.."
                            },
                            "image_url": {
                                "type": "string",
                                "nullable": true,
                                "example": "https://domain.it/path/to/file.ext"
                            }
                        },
                        "required": [
                            "token",
                            "name",
                            "email",
                            "phone",
                            "livemode",
                            "is_visible"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "BusinessRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Il Tiglio"
                    },
                    "email": {
                        "type": "string",
                        "example": "iltiglio@email.it"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+393411234124"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Lorem ipsum dolor est.."
                    }
                },
                "required": [
                    "name",
                    "email",
                    "phone"
                ]
            },
            "BusinessResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "a1b2c3d4e"
                    },
                    "name": {
                        "type": "string",
                        "example": "Il Tiglio"
                    },
                    "email": {
                        "type": "string",
                        "example": "iltiglio@email.it"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+393411234124"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Lorem ipsum dolor est.."
                    }
                }
            },
            "BusinessLineRequest": {
                "type": "object",
                "properties": {
                    "line_id": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "BusinessNetworkRequest": {
                "type": "object",
                "properties": {
                    "network_id": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "BusinessTypeRequest": {
                "type": "object",
                "properties": {
                    "type_id": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "Company": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "company"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Il Tiglio Srl"
                            },
                            "email": {
                                "type": "string",
                                "example": "iltigliosrl@email.it"
                            },
                            "vat": {
                                "type": "string",
                                "example": "IT1234567890"
                            },
                            "phone": {
                                "type": "string",
                                "example": "+393411234124"
                            },
                            "livemode": {
                                "type": "boolean",
                                "example": true
                            },
                            "sdi": {
                                "type": "string",
                                "nullable": true,
                                "example": "aEi49A3"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "vat",
                            "phone",
                            "livemode"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "CompanyRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Il Tiglio Srl"
                    },
                    "email": {
                        "type": "string",
                        "example": "iltigliosrl@email.it"
                    },
                    "vat": {
                        "type": "string",
                        "example": "IT1234567890"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+393411234124"
                    },
                    "livemode": {
                        "type": "boolean",
                        "example": true
                    },
                    "sdi": {
                        "type": "string",
                        "nullable": true,
                        "example": "aEi49A3"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "vat",
                    "phone"
                ]
            },
            "CompanyResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Il Tiglio Srl"
                    },
                    "email": {
                        "type": "string",
                        "example": "iltigliosrl@email.it"
                    },
                    "vat": {
                        "type": "string",
                        "example": "IT1234567890"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+393411234124"
                    },
                    "livemode": {
                        "type": "boolean",
                        "example": true
                    },
                    "sdi": {
                        "type": "string",
                        "nullable": true,
                        "example": "aEi49A3"
                    }
                }
            },
            "Guest": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "guest"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Arturo Covitti"
                            },
                            "phone": {
                                "type": "string",
                                "example": "+393411234124"
                            },
                            "livemode": {
                                "type": "boolean",
                                "example": true
                            },
                            "is_primary": {
                                "type": "boolean",
                                "example": true
                            }
                        },
                        "required": [
                            "name",
                            "phone",
                            "livemode",
                            "is_primary"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "GuestRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Arturo Covitti"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+393411234124"
                    },
                    "is_primary": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "required": [
                    "name",
                    "phone",
                    "is_primary"
                ]
            },
            "GuestResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Arturo Covitti"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+393411234124"
                    },
                    "livemode": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_primary": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "Line": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "line"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string",
                                "example": "Sushi"
                            }
                        },
                        "required": [
                            "label"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "LineRequest": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "example": "Sushi"
                    }
                },
                "required": [
                    "label"
                ]
            },
            "LineResponse": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "example": "Sushi"
                    }
                }
            },
            "LineBusinessRequest": {
                "type": "object",
                "properties": {
                    "business_id": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "Location": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "location"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "country_code": {
                                "type": "string",
                                "example": "IT"
                            },
                            "postal_code": {
                                "type": "string",
                                "example": "20010"
                            },
                            "area_level_1": {
                                "type": "string",
                                "example": "Milano"
                            },
                            "area_level_2": {
                                "type": "string",
                                "example": "Città di Milano"
                            },
                            "area_level_3": {
                                "type": "string",
                                "nullable": true,
                                "example": null
                            },
                            "area_level_4": {
                                "type": "string",
                                "nullable": true,
                                "example": null
                            }
                        },
                        "required": [
                            "country_code",
                            "postal_code",
                            "area_level_1",
                            "area_level_2"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "Network": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "network"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "token": {
                                "type": "string",
                                "example": "a1b2c3d4"
                            },
                            "name": {
                                "type": "string",
                                "example": "mycia"
                            },
                            "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "Lorem ipsum dolor.."
                            }
                        },
                        "required": [
                            "token",
                            "name"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "NetworkRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "mycia"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Lorem ipsum dolor.."
                    }
                },
                "required": [
                    "token",
                    "name"
                ]
            },
            "NetworkResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "a1b2c3d4"
                    },
                    "name": {
                        "type": "string",
                        "example": "mycia"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "example": "Lorem ipsum dolor.."
                    }
                }
            },
            "NetworkBusinessRequest": {
                "type": "object",
                "properties": {
                    "business_id": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "Type": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "type"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "label": {
                                "type": "string",
                                "example": "Ristorante"
                            }
                        },
                        "required": [
                            "label"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "TypeRequest": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "example": "Ristorante"
                    }
                },
                "required": [
                    "label"
                ]
            },
            "TypeResponse": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "example": "Ristorante"
                    }
                }
            },
            "TypeBusinessRequest": {
                "type": "object",
                "properties": {
                    "business_id": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "user"
                    },
                    "attributes": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "example": "Giorgio Rossi"
                            },
                            "email": {
                                "type": "string",
                                "example": "giorgio@rossi.it"
                            },
                            "phone": {
                                "type": "string",
                                "example": "+393412134658"
                            }
                        },
                        "required": [
                            "name",
                            "email",
                            "phone"
                        ]
                    }
                },
                "required": [
                    "type",
                    "attributes"
                ]
            },
            "UserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Giorgio Rossi"
                    },
                    "email": {
                        "type": "string",
                        "example": "giorgio@rossi.it"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+393412134658"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "phone"
                ]
            },
            "UserResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Giorgio Rossi"
                    },
                    "email": {
                        "type": "string",
                        "example": "giorgio@rossi.it"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+393412134658"
                    }
                }
            },
            "EntityError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "data.attributes.fieldname": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The fieldname must be a valid JSON string."
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
