{
    "openapi": "3.0.3",
    "info": {
        "title": "login.mycia.it",
        "description": "This page contains the documentation on how to use MyCia through the Authentication Server.\n\n > Note: this spec is based on [jsonapi format v1.1](https://jsonapi.org/format/1.1/) and each request, response and structure SHALL conform to the standard.\n\n## Request Content-Type\n\nThe Content-Type for POST and PUT requests can be set to `application/x-www-form-urlencoded` or `multipart/form-data`;\n\nAdd an `Accept: application/json` header to the request to get the JSON response.\nSending requests with the `Accept` header is necessary if you want to use URLs\nfor related endpoints returned by the API, such as pagination URLs.\n\n## Authentication\n\nSome endpoints do not require any authentication, pretty much anything else will require you to be authenticated.\n\nTo become authenticated you will need to ask for your API Account.\n\nOnce you have your client API account you can pass it in along with your API id as an HTTP header like this:\n\n```\ncurl -X GET \"http://127.0.0.1:3000/v1/module/action\" \\\n-H \"Accept: application/json;\" \\\n-H \"client_id: your_client_id\" \\\n-H \"client_secret: your_client_secret\"\n```\n\nand this is how POST requests will look:\n\n```\ncurl -X POST \"http://127.0.0.1:3000/v1/module/action\" \\\n-H \"Content-Type: application/x-www-form-urlencoded;\" \\\n-H \"Accept: application/json;\" \\\n-H \"client_id: your_client_id\" \\\n-H \"client_secret: your_client_secret\" \\\n-F \"field1=data\" \\\n-F \"field2=data\" \\\n-F \"field3=data\"\n```",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://login-staging.mycia.it",
            "description": "Staging url"
        },
        {
            "url": "https://login.mycia.it",
            "description": "Base url"
        }
    ],
    "paths": {
        "/oauth/authorize": {
            "parameters": [
                {
                    "name": "response_type",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "redirect_uri",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "state",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "client_id",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "scope",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "code_challenge",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "code_challenge_method",
                    "in": "query",
                    "required": false,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Request Authorization",
                "operationId": "oauthAuthorize",
                "responses": {
                    "301": {
                        "description": "Redirect to [redirect_uri]"
                    }
                }
            }
        },
        "/oauth/token": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Request an Access Token",
                "operationId": "oauthToken",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/token/refresh": {
            "post": {
                "tags": [
                    "OAuth"
                ],
                "summary": "Refresh an Access Token",
                "operationId": "oauthTokenRefresh",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencode": {
                            "schema": {
                                "$ref": "#/components/schemas/Token"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/userinfo": {
            "get": {
                "tags": [
                    "OpenID"
                ],
                "summary": "Get User info",
                "operationId": "getUserInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserResponse"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Andrea"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@example.com"
                    }
                }
            },
            "Token": {
                "type": "object",
                "required": [
                    "grant_type",
                    "client_id",
                    "redirect_uri",
                    "code"
                ]
            },
            "TokenRequest": {
                "type": "object",
                "properties": {
                    "grant_type": {
                        "type": "string",
                        "example": "authorization_code"
                    },
                    "redirect_uri": {
                        "type": "string",
                        "example": ""
                    },
                    "code": {
                        "type": "string",
                        "example": ""
                    },
                    "client_id": {
                        "type": "string",
                        "example": ""
                    },
                    "client_secret": {
                        "type": "string",
                        "example": ""
                    },
                    "code_verifier": {
                        "type": "string",
                        "example": ""
                    }
                },
                "required": [
                    "grant_type",
                    "redirect_uri",
                    "code",
                    "client_id"
                ]
            },
            "TokenResponse": {
                "type": "object",
                "properties": {
                    "token_type": {
                        "type": "string",
                        "example": "Bearer"
                    },
                    "expires_in": {
                        "type": "integer",
                        "example": ""
                    },
                    "access_token": {
                        "type": "string",
                        "example": ""
                    },
                    "refresh_token": {
                        "type": "string",
                        "example": ""
                    }
                }
            },
            "EntityError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "data.attributes.fieldname": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The fieldname must be a valid JSON string."
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
